[{"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\index.js":"1","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\reportWebVitals.js":"2","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\App.js":"3","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Login.js":"4","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Main.js":"5","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Register.js":"6","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Event.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2691,"mtime":1611447989577,"results":"11","hashOfConfig":"9"},{"size":7465,"mtime":1611447966064,"results":"12","hashOfConfig":"9"},{"size":18821,"mtime":1611447568050,"results":"13","hashOfConfig":"9"},{"size":471,"mtime":1609366944396,"results":"14","hashOfConfig":"9"},{"size":12386,"mtime":1610539821406,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"12qfotq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\index.js",[],["32","33"],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\reportWebVitals.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\App.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Login.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Main.js",["34","35"],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Register.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Event.js",["36","37","38"],"import { useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport swal from 'sweetalert'\r\nimport './App.css';\r\n\r\nconst Event = (props) => {\r\n\r\n    const { event } = useParams();\r\n    console.log(props.user[0].username);\r\n\r\n    const [maddGuestShow, setMaddGuestShow] = useState(false);\r\n    const [mcreateGiftShow, setMcreateGiftShow] = useState(false);\r\n\r\n    const [data, setData] = useState([]);\r\n    const [guests, setGuests] = useState([]);\r\n    const [gifts, setGifts] = useState([]);\r\n\r\n    const [username, setUsername] = useState(props.user[0].username);\r\n    const [eventName, setEventName] = useState('');\r\n    const [guestName, setGuestName] = useState('');\r\n    const [guestEmail, setGuestEmail] = useState('');\r\n    const [guestAwardName, setGuestAwardName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [giftRank, setGiftRank] = useState('');\r\n    const [giftPrice, setGiftPrice] = useState('');\r\n\r\n    const eventGuest = {\r\n        username,\r\n        eventName,\r\n        guestName,\r\n        guestEmail\r\n    };\r\n\r\n    const sendEmail = {\r\n        username,\r\n        guestName,\r\n        guestEmail\r\n    };\r\n\r\n    const newGift = {\r\n        username,\r\n        eventName,\r\n        guestAwardName,\r\n        description,\r\n        giftRank,\r\n        giftPrice\r\n    };\r\n\r\n    const removeGift = {\r\n        username,\r\n        eventName\r\n    };\r\n\r\n    const removeGuest = {\r\n        username,\r\n        eventName\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/events/${username}/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                setData(res)\r\n                setEventName(res[0].eventName)\r\n            });\r\n        fetch(`http://localhost:3000/guests/${username}/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                console.log(res);\r\n                setGuests(res)\r\n            });\r\n        fetch(`http://localhost:3000/gifts/${username}/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                console.log(res);\r\n                setGifts(res)\r\n            });\r\n    }, []);\r\n\r\n    const deleteAlert = (_id, info) => {\r\n        swal({\r\n            title: \"Eliminar\",\r\n            text: `Estás seguro que deseas eliminar este ${info}?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    deleteGuest(_id)\r\n                    deleteGift(_id)\r\n                    swal(`El ${info} se ha eliminado con éxito`, {\r\n                        icon: \"success\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                } else {\r\n                    swal(`El ${info} no ha sido eliminado`, {\r\n                        icon: \"info\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const createAlert = (info) => {\r\n        swal(info, {\r\n            icon: \"success\",\r\n            button: false,\r\n            timer: \"1500\"\r\n        });\r\n    }\r\n\r\n    const manageChangeGuestName = (e) => {\r\n        setGuestName(e.target.value);\r\n    };\r\n    const manageChangeGuestEmail = (e) => {\r\n        setGuestEmail(e.target.value);\r\n    };\r\n    const manageChangeGuestAwardName = (e) => {\r\n        setGuestAwardName(e.target.value);\r\n    };\r\n    const manageChangeGiftDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n    const manageChangeGiftRank = (e) => {\r\n        setGiftRank(e.target.value);\r\n    };\r\n    const manageChangeGiftPrice = (e) => {\r\n        setGiftPrice(e.target.value);\r\n    };\r\n\r\n    const addGuest = () => {\r\n\r\n        fetch(\"http://localhost:3000/guests/newGuest\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(eventGuest),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                if (datos === false) {\r\n                    alert(\"Ese invitado ya está añadido\");\r\n                } else {\r\n                    createAlert(\"Invitado\");\r\n                    //console.log(datos);\r\n                    setMaddGuestShow(false)\r\n                    setGuests(datos);\r\n                    // fetch(`http://localhost:3000/send-email/`, {\r\n                    //     method: \"POST\",\r\n                    //     headers: {\r\n                    //         \"Content-Type\": \"application/json\",\r\n                    //     },\r\n                    //     body: JSON.stringify(sendEmail),\r\n                    // })\r\n                    //     .then(function (res) {\r\n                    //         return res.json();\r\n                    //     })\r\n                    //     .then(function (datos) {\r\n\r\n                    //     })\r\n                }\r\n            });\r\n    };\r\n\r\n    const createGift = () => {\r\n\r\n        fetch(`http://localhost:3000/gifts/newGift/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newGift),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                if (datos === false) {\r\n                    alert(\"El regalo ya esta creado\");\r\n                } else {\r\n                    createAlert(\"Regalo Creado\");\r\n                    console.log(datos);\r\n                    setGifts(datos);\r\n                    setMcreateGiftShow(false)\r\n                }\r\n            });\r\n    };\r\n\r\n    const deleteGift = (_id) => {\r\n        fetch(`http://localhost:3000/gifts/deleteGift/${_id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(removeGift),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                console.log(datos);\r\n                setGifts(datos)\r\n            });\r\n    };\r\n\r\n    const deleteGuest = (_id) => {\r\n        fetch(`http://localhost:3000/guests/deleteGuest/${_id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(removeGuest),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                console.log(datos);\r\n                setGuests(datos)\r\n            });\r\n    };\r\n\r\n    const showEvent = data.map((eventPrint) => {\r\n        return (\r\n            <div className=\"datos\" key={eventPrint.eventName}>\r\n                <h3><span>{eventPrint.eventName}</span></h3>\r\n                <p><span>{eventPrint.description}</span></p>\r\n                <hr></hr>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const showGuests = guests.map((guest) => {\r\n        return (\r\n            <div className=\"datos\" key={guest.guestName}>\r\n                <h3><span>{guest.guestName}</span></h3>\r\n                <p>Aceptar: <span>{guest.state}</span></p>\r\n                <div className=\"mostrarMasEventosButton\">\r\n                    <button type=\"button\" className=\"btn btn-outline-danger btn-lg\" onClick={() => { deleteAlert(guest._id, \"invitado\") }}>Eliminar</button>\r\n                </div>\r\n                <hr></hr>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const showGifts = gifts.map((gift) => {\r\n        return (\r\n            <div className=\"datos\" key={gift.description}>\r\n                <h3><span>{gift.description}</span></h3>\r\n                <h3>Asignado: <span>{gift.guestAwardName}</span></h3>\r\n                <p>Rango: <span>{gift.rank}</span></p>\r\n                <p>Precio: <span>{gift.price}€</span></p>\r\n                <div className=\"mostrarMasEventosButton\">\r\n                    <button type=\"button\" className=\"btn btn-outline-danger btn-lg\" onClick={() => { deleteAlert(gift._id, \"regalo\") }}>Eliminar</button>\r\n                </div>\r\n                <hr></hr>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {showEvent}\r\n            <div className=\"mostrarMasEventosButton\">\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modalAddGuest\" onClick={() => setMaddGuestShow(true)}>Añadir Invitado</button>\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modalCreateGift\" onClick={() => setMcreateGiftShow(true)}>Crear Regalo</button>\r\n                <hr></hr>\r\n                <div className=\"events\">\r\n                    <div>\r\n                        <h3>Invitados</h3>\r\n                        <hr></hr>\r\n                        {showGuests}\r\n                    </div>\r\n                    <div>\r\n                        <h3>Regalos</h3>\r\n                        <hr></hr>\r\n                        {showGifts}\r\n                    </div>\r\n                </div>\r\n                <Link to={`/Main`}><button type=\"button\" className=\"btn btn-outline-primary btn-lg\">Menú principal</button></Link>\r\n                <Modal\r\n                    size=\"sm\"\r\n                    show={maddGuestShow}\r\n                    onHide={() => setMaddGuestShow(false)}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Añadir Invitado\r\n                                    </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" placeholder=\"Nombre del invitado\" onChange={manageChangeGuestName}></input>\r\n                        <input type=\"text\" placeholder=\"Email del invitado\" onChange={manageChangeGuestEmail}></input>\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalAddGuest\" onClick={() => addGuest()}>Añadir Invitado</button>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"sm\"\r\n                    show={mcreateGiftShow}\r\n                    onHide={() => setMcreateGiftShow(false)}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Crear Regalo\r\n                                    </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" placeholder=\"Asignar regalo\" onChange={manageChangeGuestAwardName}></input>\r\n                        <input type=\"text\" placeholder=\"Descripcion\" onChange={manageChangeGiftDescription}></input>\r\n                        <select onChange={manageChangeGiftRank}>\r\n                            <option>Nivel de importancia</option>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                        </select>\r\n                        <input type=\"text\" placeholder=\"Precio\" onChange={manageChangeGiftPrice}></input>\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalAddGuest\" onClick={() => createGift()}>Crear Regalo</button>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Event;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":8,"nodeType":"45","messageId":"46","endLine":9,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":13,"column":17,"nodeType":"45","messageId":"46","endLine":13,"endColumn":26},{"ruleId":"43","severity":1,"message":"48","line":19,"column":22,"nodeType":"45","messageId":"46","endLine":19,"endColumn":33},{"ruleId":"43","severity":1,"message":"49","line":35,"column":11,"nodeType":"45","messageId":"46","endLine":35,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":85,"column":8,"nodeType":"52","endLine":85,"endColumn":10,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Overlay' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'setUsername' is assigned a value but never used.","'sendEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'event' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [event, username]",{"range":"59","text":"60"},[2417,2419],"[event, username]"]